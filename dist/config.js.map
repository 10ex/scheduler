{"version":3,"sources":["../src/config.js"],"names":["criteria","env","process","NODE_ENV","projectName","config","app","APP_ENVIRONMENT","keys","slackEndpoints","service","baseUrl","$filter","production","$default","logging","opsInterval","parseInt","LOGGING_OPSINTERVAL","port","web","test","PORT","store","Confidence","Store","get","key","validKey","replace"],"mappings":";;;;;;;AAAA;;;;AAEA,MAAMA,QAAQ,GAAG;AACfC,EAAAA,GAAG,EAAEC,OAAO,CAACD,GAAR,CAAYE;AADF,CAAjB;AAIA,MAAMC,WAAW,GAAG,eAApB;AAGO,MAAMC,MAAM,GAAG;AACpBC,EAAAA,GAAG,EAAE;AACHL,IAAAA,GAAG,EAAEC,OAAO,CAACD,GAAR,CAAYM,eAAZ,IAA+B,KADjC;AAEHC,IAAAA,IAAI,EAAE,EAFH;AAIHC,IAAAA,cAAc,EAAE,EAJb;AAMHC,IAAAA,OAAO,EAAE;AANN,GADe;AAUpBC,EAAAA,OAAO,EAAE;AACPC,IAAAA,OAAO,EAAE,KADF;AAEPC,IAAAA,UAAU,EAAE,EAFL;AAGPC,IAAAA,QAAQ,EAAE;AAHH,GAVW;AAepBC,EAAAA,OAAO,EAAE;AACPC,IAAAA,WAAW,EAAEC,QAAQ,CAACf,OAAO,CAACD,GAAR,CAAYiB,mBAAb,EAAkC,EAAlC,CAAR,IAAiD;AADvD,GAfW;AAkBpBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,GAAG,EAAE;AACHR,MAAAA,OAAO,EAAE,KADN;AAEHS,MAAAA,IAAI,EAAE,IAFH;AAGHR,MAAAA,UAAU,EAAEX,OAAO,CAACD,GAAR,CAAYqB,IAHrB;AAIHR,MAAAA,QAAQ,EAAE;AAJP;AADD,GAlBc;AA0BpBV,EAAAA;AA1BoB,CAAf;;AA6BP,MAAMmB,KAAK,GAAG,IAAIC,UAAU,CAACC,KAAf,CAAqBpB,MAArB,CAAd;;AAEO,MAAMqB,GAAG,GAAIC,GAAD,IAAS;AAC1B,QAAMC,QAAQ,GAAGD,GAAG,CAACE,OAAJ,CAAY,IAAZ,EAAkB,GAAlB,CAAjB;AACA,SAAON,KAAK,CAACG,GAAN,CAAUE,QAAV,EAAoB5B,QAApB,CAAP;AACD,CAHM;;;eAKQ0B,G","sourcesContent":["import * as Confidence from 'confidence';\n\nconst criteria = {\n  env: process.env.NODE_ENV,\n};\n\nconst projectName = '10x/scheduler';\n\n\nexport const config = {\n  app: {\n    env: process.env.APP_ENVIRONMENT || 'dev',\n    keys: {\n    },\n    slackEndpoints: {\n    },\n    service: {\n    },\n  },\n  baseUrl: {\n    $filter: 'env',\n    production: '',\n    $default: '',\n  },\n  logging: {\n    opsInterval: parseInt(process.env.LOGGING_OPSINTERVAL, 10) || 86400000,\n  },\n  port: {\n    web: {\n      $filter: 'env',\n      test: 3501,\n      production: process.env.PORT,\n      $default: 3500,\n    },\n  },\n  projectName,\n};\n\nconst store = new Confidence.Store(config);\n\nexport const get = (key) => {\n  const validKey = key.replace(/-/g, '_');\n  return store.get(validKey, criteria);\n};\n\nexport default get;\n"],"file":"config.js"}